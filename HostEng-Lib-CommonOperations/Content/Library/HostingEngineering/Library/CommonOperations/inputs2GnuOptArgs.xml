<?xml version="1.0" encoding="UTF-8"?>
<operation id="886fe2bb-8c10-477c-bc31-52035ba88b2c">
  <descriptionCdata><![CDATA[886fe2bb-8c10-477c-bc31-52035ba88b2c.description=<pre>Operation to transform the case of inputs\n\nInputs\:\n\ninputList\:  comma seperated list of variables to check\ncaseType\: upper or lower; this is the case to transform to - if left blank, will default to lower.\n\n</pre>
]]></descriptionCdata>
  <annotation>886fe2bb-8c10-477c-bc31-52035ba88b2c.description</annotation>
  <name>inputs2GnuOptArgs</name>
  <categories/>
  <inputs>
    <staticBinding id="cddfd1c8-c30b-413b-b73e-bb73fa2a69a1">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>optArgVars</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <value></value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="bbc2cff9-54c8-48ef-b61e-00a74072c12f">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_1</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${optArgVars}</value>
      <record>false</record>
    </staticBinding>
  </inputs>
  <scriptlet id="896be4c9-fbb8-4764-b6a3-a6724a24b1c0">
    <annotation></annotation>
    <name>Operation:inputs2GnuOptArgs (886fe2bb-8c10-477c-bc31-52035ba88b2c)</name>
    <script>var myInputs = optArgVars.split(&quot;,&quot;);
var myResult = &quot;&quot;;
for (var i = 0; i &lt; myInputs.length; i++)
{
    if (scriptletContext.get(myInputs[i]) != null &amp;&amp; trim(scriptletContext.get(myInputs[i])) != &quot;&quot;)
    {
        myResult += &quot; &quot; + &quot;--&quot; + myInputs[i] + &quot;=&quot; + scriptletContext.get(myInputs[i])
    }
}
scriptletResponse = &quot;success&quot;; 
scriptletResult = myResult;

		
function trim(value)
{
var s = &quot;&quot;+value;
s.replace(/^\s*|\s*$/g, &quot;&quot;)
return s;
}
</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="1c00d9ff-a7b4-47bf-8b18-67d9f9bddcbb">
      <annotation></annotation>
      <name>success</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="788af662-f08d-4a2f-b7b7-043c803e1bda">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>true</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="444b51b7-d75d-4188-91c0-dc8998ec7667">
    <annotation></annotation>
    <name>Field 1</name>
    <fieldName>Field_1</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="f45eba10-0711-4c0b-b88f-4ca55db709ac">
    <baseIcon>text_code_javascript.png</baseIcon>
    <basePath>/Others/</basePath>
    <readOnly>false</readOnly>
    <layers>
      <iconSpec id="d3755765-98c1-40ce-a6da-a0f03060ad21">
        <baseIcon>put.png</baseIcon>
        <basePath>/Annotations/</basePath>
        <readOnly>false</readOnly>
        <layers/>
      </iconSpec>
    </layers>
  </iconSpec>
  <opRef>
    <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
</operation>