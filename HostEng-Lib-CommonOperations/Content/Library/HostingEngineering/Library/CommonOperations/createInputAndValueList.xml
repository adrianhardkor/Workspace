<?xml version="1.0" encoding="UTF-8"?>
<operation id="59fe8721-5ac4-470f-bc31-8e9fceeed998">
  <descriptionCdata><![CDATA[59fe8721-5ac4-470f-bc31-8e9fceeed998.description=<pre>Operation to check for null or empty string local variables.\n\nInputs\:\n\ninputList\:  comma seperated list of variables to check\n\nReponsses\:\nhasNull\:  at least one variable is null or has an empy string for a value\nnoNulls\:  all variables have a value\n\nResult\:  List of variables that are null or empty strings\n\n</pre>
]]></descriptionCdata>
  <annotation>59fe8721-5ac4-470f-bc31-8e9fceeed998.description</annotation>
  <name>createInputAndValueList</name>
  <categories/>
  <inputs>
    <staticBinding id="7585693d-c4ba-4009-a459-f71a695788fd">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>inputList</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <value></value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="ca7a0550-38e5-4a87-9205-5e6d4100a717">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_1</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${inputList}</value>
      <record>false</record>
    </staticBinding>
  </inputs>
  <scriptlet id="7944887a-262b-4d88-8467-90c566b524cd">
    <annotation></annotation>
    <name>Operation:createInputAndValueList (59fe8721-5ac4-470f-bc31-8e9fceeed998)</name>
    <script>var myInputs = inputList.split(&quot;,&quot;);
var myNullResult = &quot;&quot;;
var myValueList = &quot;&quot;;
var myInputList = &quot;&quot;;
for (var i = 0; i &lt; myInputs.length; i++) {
	if (scriptletContext.get(myInputs[i]) == null || trim(scriptletContext.get(myInputs[i]))==&quot;&quot;)
		myNullResult += myInputs[i] + &quot; isNull,&quot;;
    else {
        myInputList += myInputs[i] + &quot;,&quot;;
        myValueList += scriptletContext.get(myInputs[i]) + &quot;,&quot;; } 
}

if (myValueList == &quot;&quot;) {
	scriptletResponse = &quot;allNull&quot;; 
	scriptletResult = myNullResult.replace(/,$/,&quot;&quot;);}
else {
	scriptletResponse = &quot;success&quot;;
	scriptletResult = &quot;success&quot;;	
	scriptletContext.put(&quot;inputList&quot;,myInputList.replace(/,$/,&quot;&quot;));
	scriptletContext.put(&quot;valueList&quot;,myValueList.replace(/,$/,&quot;&quot;));}
	
	
function trim(value){
var s = &quot;&quot;+value;
s.replace(/^\s*|\s*$/g, &quot;&quot;)
return s;
}
</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="d6bbc7d8-12f7-4aaf-b349-b4c74d2a3a91">
      <annotation></annotation>
      <name>success</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="1172d513-87ee-4725-987a-ecdc33d5226f">
      <annotation></annotation>
      <name>allNull</name>
      <isDefault>true</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="5dbfdfe7-bd79-4a8a-8a81-e1b30b70a138">
    <annotation></annotation>
    <name>Field 1</name>
    <fieldName>Field_1</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="61c73474-032f-4416-922a-89b8774401c9">
    <baseIcon>text_code_javascript.png</baseIcon>
    <basePath>/Others/</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <opRef>
    <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
</operation>