<?xml version="1.0" encoding="UTF-8"?>
<operation id="5913603d-2ec4-401e-8f5a-2358542e4022">
  <descriptionCdata><![CDATA[5913603d-2ec4-401e-8f5a-2358542e4022.description=This will sort a table based upon one column in the table.  If all of the entries in that column are numeric the sort will be numeric, otherwise it will be alphabetic.\n\n<pre>\nInputs\:\nTable\: the table to sort\ncolumnDelimiter - the character used to delimit columns\nrowDelimiter - the character used to delimit rows\ncolumn - the number of the column to sort on(starting at 1).\nreverse - set to "true" to make the sort a reverse sort\n\nResults\:\nThe sorted table output with the same row and column delimiters\n\nResponses\:\nsuccess - if the sort completed\nfailure - if there was an error, for example the specified column was missing in one or more entries\n</pre>
5913603d-2ec4-401e-8f5a-2358542e4022.fe718aeb-7222-4b0c-91bf-b91b26e5fd70.prompt=Reverse Sort
]]></descriptionCdata>
  <annotation>5913603d-2ec4-401e-8f5a-2358542e4022.description</annotation>
  <name>Table Sort</name>
  <categories/>
  <inputs>
    <userInputBinding id="1ef464de-6c11-45ce-9a68-dc3e3a63b662">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>table</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="2489d7b7-97ef-458f-acf2-c334dc351bc7">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>columnDelimiter</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="d9fc6ff7-c574-4111-9786-dd9f53fdc166">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>rowDelimiter</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="5bb1c1d9-be6b-4bad-ad95-6d6ec8cb505e">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>column</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="fe718aeb-7222-4b0c-91bf-b91b26e5fd70">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>reverse</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt>5913603d-2ec4-401e-8f5a-2358542e4022.fe718aeb-7222-4b0c-91bf-b91b26e5fd70.prompt</prompt>
      <isMultiSelect>false</isMultiSelect>
      <link>
        <refId>96a1ed25-cdc9-4ff6-8fba-e9c044c5ca53</refId>
        <refName>Boolean - False Default</refName>
      </link>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <staticBinding id="55e8662a-f08d-4bf1-8a45-ef9428f56f94">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_3</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${columnDelimiter}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="e519b3cf-48bf-495b-9b55-9b5245f32395">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_4</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${rowDelimiter}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="5790d801-74cd-4159-b05e-34451d0e1c49">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_1</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${table}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="def4bba8-7953-4000-997a-b2cf55d13d5c">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_2</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${column}</value>
      <record>false</record>
    </staticBinding>
  </inputs>
  <scriptlet id="f1d1ea60-75a9-4094-b5dc-9a691bcca83f">
    <annotation></annotation>
    <name>Operation Table Sort (5913603d-2ec4-401e-8f5a-2358542e4022)</name>
    <script>scriptletResult = &quot;&quot;;
scriptletResponse = &quot;failure&quot;;
error = &quot;false&quot;;
outlines = new Array;

// get the lines from the table
lines = table.split(rowDelimiter);

if (lines != null &amp;&amp; lines != &quot;&quot;) {

   // count the list and figure out if it is numeric or not
   numeric = &quot;true&quot;;
   for (total = 0; total &lt; 10000; total++) {
      // are we at the end of the list?
      if (lines[total] == null || lines[total] == &quot;&quot;) break;

      // split the line into columns
      cols = lines[total].split(columnDelimiter);

      // which column do we care about?
      check = column - 1;

      // is there acutally data?
      if (cols == null || cols[check] == null) {
          error = &quot;true&quot;;
          break;
      }
      if (cols[check].match(/[^0-9.]/) != null || cols[check].match(/[0-9.]/) == null) numeric = false;
      outlines[total] = lines[total];
   }

   if (error == &quot;false&quot;) {
      outlines.sort(sortTable);

      // create the new list
      for (i = 0; i &lt; total; i++) {
         if (outlines[i] == null) break;
         if (i != 0) scriptletResult += rowDelimiter;
         scriptletResult += outlines[i];
      }

      scriptletResponse = &quot;success&quot;;
   }
}

// this assumes we are getting two lines as input and deciding based on one column
function sortTable(a,b) {
   // split the line into columns
   colA = a.split(columnDelimiter);
   colB = b.split(columnDelimiter);
   // which column do we care about?
   check = column - 1;
   if (numeric == &quot;true&quot;) {
      value =  (colA[check] - colB[check]);
   }
   else {
      if (colA[check] == colB[check]) {
         value = 0;
      }
      else {
         value = (colA[check] &gt; colB[check]) ? 1 : -1;
      }
   }
   // do we need to reverse the sort?
   if (reverse == &quot;true&quot;) value = -value;
   return(value);
}</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="801d7c38-ae19-4aea-97df-28f0d08e1d4a">
      <annotation></annotation>
      <name>success</name>
      <isDefault>true</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="a9ec277a-a81b-4c58-ae01-d287b20120c2">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>false</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="c7e5dae6-722a-4334-bac7-18ea9bb3d256">
    <annotation></annotation>
    <name>Field 1</name>
    <fieldName>Field_1</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="933e75b0-f658-4459-a482-8f16d1cfab86">
    <baseIcon>database_table.png</baseIcon>
    <basePath>Databases/</basePath>
    <readOnly>false</readOnly>
    <layers>
      <iconSpec id="8130b789-7deb-47f8-9a89-0e801e2fcf70">
        <baseIcon>refresh.png</baseIcon>
        <basePath>Annotations/</basePath>
        <readOnly>false</readOnly>
        <layers/>
      </iconSpec>
    </layers>
  </iconSpec>
  <opRef>
    <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
</operation>